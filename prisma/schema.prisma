// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model House {
  id       Int    @id @default(autoincrement())
  name     String @unique
  email    String
  password String

  character Character[]
  houseItem HouseItem[]

  @@map("houses")
}

model Character {
  id      Int    @id @default(autoincrement())
  name    String
  kindId  Int
  kind    Kind   @relation(fields: [kindId], references: [id])
  houseId Int
  house   House  @relation(fields: [houseId], references: [id])
  seeks   String
  fears   String
  active Boolean @default(true)

  characterItem CharacterItem[]

  @@map("characters")
}

model Kind {
  id        Int    @id @default(autoincrement())
  name      String @unique
  description String

  character Character[]
  @@map("kinds")
}

model Item {
  id          Int    @id @default(autoincrement())
  categoryId Int?
  category Category? @relation(fields: [categoryId], references: [id])
  name        String @unique
  description String

  characterItem CharacterItem[]
  houseItem     HouseItem[]

  @@map("items")
}

model Category {
  id          Int    @id @default(autoincrement())
  name String @unique

  item Item[]

  @@map("categories")
}


model CharacterItem {
  id          Int       @id @default(autoincrement())
  characterId Int
  character Character[]
  itemId      Int
  item        Item      @relation(fields: [itemId], references: [id])

  @@map("charactersItems")
}

model HouseItem {
  id      Int   @id @default(autoincrement())
  houseId Int
  house   House @relation(fields: [houseId], references: [id])
  itemId  Int
  item    Item  @relation(fields: [itemId], references: [id])

  @@map("houseItem")
}

model NonPlayableCharacter {
  id          Int    @id @default(autoincrement())
  name        String
  portraitUrl String

  @@map("nonPlayableCharacters")
}
